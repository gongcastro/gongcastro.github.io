{
  "hash": "01e26cb167bfdeeeddc86f602dc3fb39",
  "result": {
    "markdown": "---\ntitle: \"Using decktape to exporting Quarto revealjs slides to PDF\"\ndescription: \"Using decktape to export my Quarto slides to PDF saved my life five minutes before a deadline. I might save yours too.\"\nimage: revealjs-to-pdf.png\ncategories:\n  - r\n  - quarto\n  - revealjs\n  - presentation\n  - pdf\nformat: html\nfrom: markdown+emoji\ncode-fold: true\nreference-location: margin\nfig-align: center\nfig-dpi: 600\necho: false\nwarning: false\nmessage: false\ndate: 2023-06-08\n---\n\n\n## TL;DR\n\nInstall decktape and adapt this command to download your slides---which should be deployed on GitHub Pages---as PDF in your local machine:\n\n```js\ndecktape https://gongcastro.github.io/ips_2023_trajectories slides.pdf\n```\n\n## The whole story\n\nLast week I presented an oral communication at the [International Symposium of Psycholinguistics](https://www.ehu.eus/en/web/isp2023). I feel comfortable using Quarto, and I had already given a couple of presentation generating slides from Quarto, so I decided to take the next step and use quarto for this one as well.\n\nI chose [RevealJS](https://quarto.org/docs/presentations/revealjs/) as the output format of my slides: I looks beautiful, you don't need much knowledge of HTML or CSS to fix the layout of the slides, and it has a nice presenter view mode. In the end this is what my slides looked like:\n\n\n::: {.cell}\n::: {.cell-output-display}\n```{=html}\n<div class=\"shareagain\" style=\"min-width:300px;margin:1em auto;\" data-exeternal=\"1\">\n<iframe src=\"https://gongcastro.github.io/isp_2023_trajectories/#1\" width=\"800\" height=\"450\" style=\"border:2px solid currentColor;\" loading=\"lazy\" allowfullscreen></iframe>\n<script>fitvids('.shareagain', {players: 'iframe'});</script>\n</div>\n```\n:::\n:::\n\n\nThe main drawback of RevealJS (or any HTML output format) is that presenting from a different computer requires moving a whole folder, as opposed to just moving the `.pptx` or `.pdf` file to the new machine. If one moves only the resulting `index.html` that contains the RevealJS slides, the presentation will lose all of its nice formatting, and won't show any images. From previous (bad) experiences, I knew that this might be a problem, so I used GitHub Pages to [deploy my slides](https://quarto.org/docs/publishing/github-pages.html) on a website.\n\n\nMy plan was to access the URL of the slides whenever I was about to present. The day before the presentation, I started worrying about having taking such a risk: what if the internet is not working? I needed to export the slides to a PDF. A PDF never (well, rarely) fails.  \n\nThe problem is that exporting Quarto slides to PDF is not as simple as just adding the `pdf: default` line to the YAML header of the file, under `format:`, like this:\n\n```yaml\nformat:\n  revealjs: default\n  pdf: default\n```\n\nThis will render the slides as a PDF *document*, not as *slides*. Also, much of the nice formatting would be lost, as the `.scss` file that contained the styling only applies to HTML.\n\nQuarto offers a PDF output format, [Beamer](https://ctan.org/pkg/beamer?lang=en), which is pretty popular among LaTeX users. But again, [generating the presentation in Beamer](https://quarto.org/docs/presentations/beamer.html) format would require re-doing the formatting from scratch, and doing so dealing with LaTeX, which I'm not totally comfortable with. This was not an option. Neither it was to use the [Power Point](https://quarto.org/docs/presentations/powerpoint.html) output format, as not only the format was lost, but also prevented any possibility of customising the layout of the slides.\n\nFinally, I came across the [Print to PDF](https://quarto.org/docs/presentations/revealjs/presenting.html#print-to-pdf) section of the [Presenting Slides](https://quarto.org/docs/presentations/revealjs/presenting.html#print-to-pdf) article in the Quarto documentation:\n\n![A snapshot of the instructions to print a RevealJS presentation to PDF in the Quarto documentation](print-to-pdf.png)\n\nAlthough this looked promising, the output of this method was not what I expected. the layout had been moved around a bit, and some formatting options were not preserved. I this presentation was aimed at my colleagues, it would have been ok-ish, but it was not for a conference presentation.\n\nAt this point I was already I was already considering staying up all night re-doing the presentation in Power Point, and forgetting about Quarto for a while. In the last minute, when reading the [RevealJS documentation](https://revealjs.com/pdf-export/#alternative-ways-to-export), I found the suggestion of using **decktape**:\n\n![My salvation](revealjs-docs.png)\n\nI was not very hopeful about this. [decktape](https://github.com/astefanutti/decktape) is written in JavaScript, which I'm not very confortable with, and I feared wating too long trying to make it work instead of just doing everything from scratch in Power Point. **But it worked!** \n\nI only had to do the following:\n\n1. Install [Node.js](https://nodejs.org/en/download)\n2. Install [npm](https://docs.npmjs.com/downloading-and-installing-node-js-and-npm) from the Node.js console:\n\n```js\nnpm install -g npm\n```\n\nThen following the instructions in the decktape repository:\n\n3. Install decktape from the Node.js console:\n\n```js\nnpm install -g decktape\n```\n\n4. Finally, using the `decktape` command to download my slides deployed on Github Pages as a PDF:\n\n```js\ndecktape https://gongcastro.github.io/ips_2023_trajectories slides.pdf\n```\n\nAnd it did the job, preserving the layout, SCSS formatting, and even the links! \n\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<script src=\"site_libs/fitvids-2.1.1/fitvids.min.js\"></script>\r\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}